% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prune.R
\name{prune_dirichlet_polygons}
\alias{prune_dirichlet_polygons}
\title{Prune Dirichlet polygons based on area}
\usage{
prune_dirichlet_polygons(ctdf, sd = 1, queen = TRUE, transform = log)
}
\arguments{
\item{ctdf}{A `ctdf` data frame (typically created with [as_ctdf()]).}

\item{sd}{Numeric multiplier controlling the area threshold for pruning (default = 1). 
Polygons with log-area below this threshold (relative to the mean) are considered for pruning.}

\item{queen}{Logical. If `TRUE` (default), uses Queen contiguity in neighbor detection 
(shared point or edge). If `FALSE`, uses Rook contiguity (shared edge only).}
}
\value{
A named list of class `nb` (from the `spdep` package), where each name corresponds 
  to an `.id` in the input `ctdf` and each element is an integer vector of neighbor indices.
}
\description{
This function computes Dirichlet (Voronoi) polygons from a `ctdf` object and removes 
those with unusually small areas (after log-scaling and centering), optionally using 
Queen contiguity to define neighbors.
}
\note{
Dirichlet polygons are computed via the `deldir` package. Only polygons with 
  `.filter == FALSE` and small log-area (relative to the sample) are retained before 
  neighbor construction. This is typically used to identify spatially isolated or dense 
  regions in tracking data.
}
\examples{
library(clusterTrack)
data(toy_ctdf_k2)
ctdf = as_ctdf(toy_ctdf_k2)
filter_intersection(ctdf)
nb = prune_dirichlet_polygons(ctdf, sd = 1, transform = sqrt)
plot(nb, st_coordinates(ctdf[.id\%in\%names(nb), location]))

}
\seealso{
[as_ctdf()], [filter_intersection()], [spdep::poly2nb()]
}
